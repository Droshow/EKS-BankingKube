name: Deploy Infrastructure

on:
  workflow_dispatch:

jobs:
  deploy-infra:
    runs-on: [self-hosted, eks]
    # runs-on: ubuntu-latest #change to self-hosted when using runner runs-on: [self-hosted, bankingKuber]
    permissions:
      id-token: write
      contents: read
    env:
      AWS_ACCOUNT_ID: 961477247679
      AWS_REGION: eu-central-1
      EKS_CLUSTER_NAME: Banking-Kube-Sloth
    steps:
      # - name: Checkout Repository
      #   uses: actions/checkout@v3 for public runner
      - name: Install Docker
        run: |
          sudo yum install -y docker
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo usermod -aG docker $USER
          docker --version
          sudo chmod 666 /var/run/docker.sock
      
      - name: Run Node.js in Docker
        run: |
          docker run --rm -v $(pwd):/workspace -w /workspace node:18-alpine node -v
          docker run --rm -v $(pwd):/workspace -w /workspace node:18-alpine npm install
          docker run --rm -v $(pwd):/workspace -w /workspace node:18-alpine npm run build

      # - name: Install Compatible Node.js
      #   run: |
      #     sudo yum remove -y nodejs
      #     curl -fsSL https://rpm.nodesource.com/setup_16.x | sudo bash -
      #     sudo yum install -y nodejs
      #     node -v
      #     npm -v

      - name: Manual Git Checkout
        run: |
          cd /home/ssm-user/
          sudo rm -rf EKS-BankingKube # Cleanup before checkout
          git clone https://github.com/Droshow/EKS-BankingKube.git
          cd EKS-BankingKube
          git fetch --tags
          git checkout ${{ github.sha }}
          ls -la

           # Step 2: Debug OIDC Setup
      - name: Debug OIDC Setup
        run: |
          echo "Debugging OIDC setup..."
          echo "GitHub Repository: ${{ github.repository }}"
          echo "GitHub Ref: ${{ github.ref }}"
          echo "GitHub Workflow: ${{ github.workflow }}"
          echo "GitHub Run ID: ${{ github.run_id }}"
          echo "OIDC permissions are enabled with id-token: write."

      - name: Configure AWS Credentials
        id: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/ci-cd-role
          aws-region: eu-central-1

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Print working directory
        run: pwd

      - name: Initialize Terraform
        working-directory: EKS_infra
        run: terraform init
      
      # - name: state import
      #   working-directory: EKS_infra
      #   run: |
      #     terraform import -var-file="envs/terraform_dev.tfvars" aws_iam_role.ci_cd_role ci-cd-role
      #     terraform import -var-file="envs/terraform_dev.tfvars" aws_iam_policy.ci_cd_custom_policy arn:aws:iam::961477247679:policy/ci-cd-custom-policy
      #     terraform import -var-file="envs/terraform_dev.tfvars" aws_iam_openid_connect_provider.github arn:aws:iam::961477247679:oidc-provider/token.actions.githubusercontent.com
      - name: Plan Terraform
        working-directory: EKS_infra
        run: terraform plan -var-file="envs/terraform_dev.tfvars"
#temp off
      - name: Apply Terraform
        working-directory: EKS_infra

        #commenting out general terraform apply to test just SSM functionality 
        # run: terraform apply -auto-approve -var-file="envs/terraform_dev.tfvars"
        run: | 
          terraform apply -auto-approve -var-file="envs/terraform_dev.tfvars" \
              --target=module.networking \
              --target=module.security \
              --target=module.ec2_cluster_access \
              --target=module.eks \
              --target=module.ecr \
              --target=module.node_groups \
              --target=module.storage

      
      # - name: Update Kubeconfig
      #   run: |
      #     mkdir -p ~/.kube
      #     aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}
      # - name: Verify kubectl Access
      #   run: |
      #     kubectl get nodes
      