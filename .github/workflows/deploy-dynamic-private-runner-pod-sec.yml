name: Deploy Dynamic Pod Sec (Private Runner)

on:
  workflow_dispatch:

jobs:
  build-and-deploy-private:
    runs-on: [self-hosted, eks]
    permissions:
      id-token: write   # Required if you want to assume an IAM role via OIDC
      contents: read
    env:
      AWS_ACCOUNT_ID: 961477247679
      AWS_REGION: eu-central-1
      EKS_CLUSTER_NAME: Banking-Kube-Sloth

    steps:
      - name: Manual Git Checkout (Always main)
        run: |
          # 1) Remove any existing repo folder
          sudo rm -rf /home/ssm-user/EKS-BankingKube

          # 2) Create a clean folder with the right ownership
          sudo mkdir -p /home/ssm-user/EKS-BankingKube
          sudo chown -R ssm-user:ssm-user /home/ssm-user/EKS-BankingKube

          # 3) Switch to ssm-user and clone the repo
          sudo su ssm-user -c "cd /home/ssm-user && git clone https://github.com/Droshow/EKS-BankingKube.git"

          # 4) Fetch and checkout main branch, then pull the latest
          sudo su ssm-user -c "cd /home/ssm-user/EKS-BankingKube && \
                              git fetch origin main && \
                              git checkout main && \
                              git pull origin main && \
                              ls -la"  # List files to verify
      # 3) (Optional) Assume an IAM role if needed
      - name: Assume Role (Optional)
        run: |
          ROLE_ARN="arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/ci-cd-role"
          SESSION_NAME="ci-cd-session"

          CREDS=$(aws sts assume-role --role-arn "$ROLE_ARN" --role-session-name "$SESSION_NAME" --output json)
          export AWS_ACCESS_KEY_ID=$(echo $CREDS | jq -r '.Credentials.AccessKeyId')
          export AWS_SECRET_ACCESS_KEY=$(echo $CREDS | jq -r '.Credentials.SecretAccessKey')
          export AWS_SESSION_TOKEN=$(echo $CREDS | jq -r '.Credentials.SessionToken')

          echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN" >> $GITHUB_ENV

      # 4) Update Kubeconfig so that 'kubectl' can talk to your cluster
      - name: Update Kubeconfig
        run: |
          # If your self-hosted runner user is not 'root', adjust paths and permissions accordingly
          mkdir -p ~/.kube
          aws eks update-kubeconfig \
            --name ${{ env.EKS_CLUSTER_NAME }} \
            --region ${{ env.AWS_REGION }} \
            # --role-arn "arn:aws:iam::${{env.AWS_ACCOUNT_ID}}:role/ci-cd-role"

      # 5) Generate TLS Certificates in your Dynamic_Pod_Sec/scripts folder
      - name: Generate TLS Certificates
        working-directory: /home/ssm-user/EKS-BankingKube/BankingKube_app/Dynamic_Pod_Sec/scripts
        run: bash generate-certs.sh

      # 6) Deploy Webhook Manifests
      - name: Deploy Webhook
        working-directory: /home/ssm-user/EKS-BankingKcdube/BankingKube_app/Dynamic_Pod_Sec/scripts
        run: bash deploy-webhook.sh
