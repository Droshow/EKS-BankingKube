name: Destroy Infrastructure

on:
  workflow_dispatch:

jobs:
  destroy-infra:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_ACCOUNT_ID: 961477247679
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        id: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/ci-cd-role
          aws-region: eu-central-1

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Initialize Terraform
        working-directory: EKS_infra
        run: terraform init
#these resources I wish not to destroy but they will have to be added to the state file
      - name: Remove CI/CD Role and Policies from State
        working-directory: EKS_infra
        run: |

          terraform state rm module.eks.kubernetes_config_map.aws_auth
          # terraform state rm aws_iam_role.ci_cd_role
          # terraform state rm aws_iam_policy.ci_cd_custom_policy
          # terraform state rm aws_iam_role_policy_attachment.known_policies_attach
          # terraform state rm aws_iam_role_policy_attachment.custom_policy_attach
          # terraform state rm aws_iam_openid_connect_provider.github

      - name: Destroy Terraform
        working-directory: EKS_infra
        # run: terraform destroy -auto-approve -var-file="envs/terraform_dev.tfvars"
        #partial destroy
        run: | 
         terraform destroy -auto-approve -var-file="envs/terraform_dev.tfvars" \
          --target=module.ec2_cluster_access \
          --target=module.ecr \
          --target=module.eks \
          --target=module.networking \
          --target=module.node_groups \
          --target=module.storage \
          --target=module.security
